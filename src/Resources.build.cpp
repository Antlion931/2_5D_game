
// This file is generated by ResourceLoader, do not edit it manually
// Generated from /home/antlion/Game_Jams/2_5D_game/resources
// Generated on 2024-01-10 13:08

#include <Resources.build.hpp>

#include <fstream>
#include <stdexcept>
#include <sstream>

namespace Resources {
    inline std::unique_ptr<sf::Music> make_music(const std::string& path);
    inline std::string read_text(const std::string& path);
    inline sf::Texture make_texture(const std::string& path);
    inline sf::SoundBuffer make_soundBuffer(const std::string& path);

    inline std::unique_ptr<sf::Music> make_music(const std::string& path)
    {
        auto music = std::make_unique<sf::Music>();
        if(!music->openFromFile(path))
            throw std::runtime_error("Failed to load music " + path);
        return music;
    }

    inline std::string read_text(const std::string& path)
    {
        std::stringstream buffer;

        std::ifstream file(path, std::ios::in);
        if(!file.is_open())
            throw std::runtime_error("Could not open file " + path);

        buffer << file.rdbuf();
        return buffer.str();
    }

    inline sf::Texture make_texture(const std::string& path)
    {
        sf::Texture texture;
        if(!texture.loadFromFile(path))
            throw std::runtime_error("Failed to load texture " + path);
        return texture;
    }

    inline sf::SoundBuffer make_soundBuffer(const std::string& path)
    {
        sf::SoundBuffer buffer;
        if(!buffer.loadFromFile(path))
            throw std::runtime_error("Failed to load sound " + path);
        return buffer;
    }

} // namespace Resources
